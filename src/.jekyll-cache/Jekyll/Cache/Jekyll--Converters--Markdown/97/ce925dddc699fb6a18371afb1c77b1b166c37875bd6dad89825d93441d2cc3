I"w<h1 id="object-객체를-통한-쿼리빌드">Object 객체를 통한 쿼리빌드</h1>
<p><code class="highlighter-rouge">jinyMysql</code>은 손쉬운 데이터 갱신 작업을 위해서 Update 클래스를 제공합니다.</p>

<p><br /></p>

<h2 id="객체생성">객체생성</h2>
<hr />
<p>update 객체는 Connection 클래스의 <code class="highlighter-rouge">update</code> 팩토리 메소드를 호출함으로서 객체를 반환 받을 수 있습니다.</p>

<ul>
  <li>기본호출 :</li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$db</span><span class="o">-&gt;</span><span class="na">update</span><span class="p">();</span>
</code></pre></div></div>
<p><code class="highlighter-rouge">update()</code> 메소드는 update 클래스의 객체를 생성하여 반환합니다.</p>

<ul>
  <li>첫번째 인수값 : 첫번째 인수로 테이블명을 지정하는 경우, 객체를 생성시 자동으로 테이블명을 설정합니다.</li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">uptate</span><span class="p">(</span><span class="s2">"members"</span><span class="p">);</span>
</code></pre></div></div>

<ul>
  <li>두번재 인자 : 
갱신할 데이터를 전송합니다.</li>
</ul>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">uptate</span><span class="p">(</span><span class="s2">"members"</span><span class="p">,</span> <span class="p">[</span><span class="s1">'firstname'</span><span class="o">=&gt;</span><span class="s2">"1234"</span><span class="p">]);</span>
</code></pre></div></div>
<p>갱신데이터는 객체 생성후에 <code class="highlighter-rouge">setFields()</code>메소드를 사용하여 추가 설정이 가능합니다.</p>

<p><br /></p>

:ET