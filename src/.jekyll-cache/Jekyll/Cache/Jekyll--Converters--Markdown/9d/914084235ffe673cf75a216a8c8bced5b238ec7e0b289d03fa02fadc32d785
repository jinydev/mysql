I"r<h1 id="값-읽어오기">값 읽어오기</h1>
<hr />
<p><code class="highlighter-rouge">select</code> 쿼리는 반환 값을 가지고 있는 타입입니다.</p>

<p>결과값은 <code class="highlighter-rouge">배열</code> 또는 <code class="highlighter-rouge">객체</code>로 읽어 올 수 있습니다.</p>

<p><br /></p>

<h2 id="패치타입">패치타입</h2>
<hr />
<ul>
  <li>PDO::FETCH_NUM : 숫자 인덱스 배열 반환</li>
  <li>PDO::FETCH_ASSOC : 컬럼명이 키인 연관배열 반환</li>
  <li>PDO::FETCH_BOTH : 위 두가지 모두</li>
  <li>PDO::FETCH_OBJ : 컬럼명이 프로퍼티인 인명 객체 반환</li>
</ul>

<p><br /></p>

<h2 id="pdo-fetch">pdo fetch</h2>
<hr />
<p>jinyMysql은 PDO를 통한 데이터 컨넥션을 처리합니다. PDO는 기본적으로 데이터를 읽이 위한 두가지 타입의 fetch를 제공합니다. 
내부적으로 fetch 동작을 수행할 수 있도록 2개의 brige 메소드를 제공합니다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">function</span> <span class="nf">fetch</span><span class="p">(</span><span class="nv">$type</span><span class="o">=</span><span class="nx">PDO</span><span class="o">::</span><span class="na">FETCH_OBJ</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">stmt</span><span class="o">-&gt;</span><span class="na">fetch</span><span class="p">(</span><span class="nv">$type</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">fetchAll</span><span class="p">(</span><span class="nv">$type</span><span class="o">=</span><span class="nx">PDO</span><span class="o">::</span><span class="na">FETCH_ASSOC</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">stmt</span><span class="o">-&gt;</span><span class="na">fetchAll</span><span class="p">(</span><span class="nv">$type</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="객체-읽기">객체 읽기</h2>
<hr />
<p>생성된 쿼리를 실행하고 fetchObj() 메소드를 호출하는 동작을 수행합니다.</p>
<ul>
  <li>runObj() : 객체로 읽기</li>
</ul>

<h3 id="복수값-데이터">복수값 데이터</h3>
<hr />
<p>데이터가 여러개가 있을 경우 반복적인 읽기 작업이 필요합니다.
이를 쉽게 처리하기 위해서 복수의 결과값을 읽어 올 수 있도록 전용 메소드를 제공합니다.</p>

<p>생성된 쿼리를 실행하고 fetchObjAll() 메소드를 호출하는 동작을 수행합니다.</p>
<ul>
  <li>runObjAll()</li>
</ul>

<p><br /></p>

<h2 id="배열-읽기">배열 읽기</h2>
<hr />
<p>생성된 쿼리를 실행하고 fetchAssoc() 메소드를 호출하는 동작을 수행합니다.</p>
<ul>
  <li>runAssoc() : 배열로 읽기</li>
</ul>

<p><br /></p>

<h3 id="복수값-데이터-1">복수값 데이터</h3>
<hr />
<p>생성된 쿼리를 실행하고 fetchAssocAll() 메소드를 호출하는 동작을 수행합니다.</p>
<ul>
  <li>runAssocAll()</li>
</ul>

<p><br /></p>

<h2 id="데이터-갯수-조회">데이터 갯수 조회</h2>
<hr />
<p>테이블에 있는 데이터의 갯수를 조회할 수 있습니다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$count</span> <span class="o">=</span> <span class="nv">$db</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s2">"members4"</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">();</span>
</code></pre></div></div>
:ET